# Nginx Load Balancer Configuration
# This configuration distributes traffic across multiple servers

upstream gaming_app_backend {
    # Load balancing method: least_conn (sends to server with least connections)
    # Other options: round_robin (default), ip_hash (sticky sessions)
    least_conn;
    
    # Backend servers
    # Add your servers here - these will be auto-generated during deployment
    # server REPLIT_URL:5000 weight=1 max_fails=3 fail_timeout=30s;
    # server DROPLET_1_IP:5000 weight=3 max_fails=3 fail_timeout=30s;
    # server DROPLET_2_IP:5000 weight=3 max_fails=3 fail_timeout=30s;
    # server DROPLET_3_IP:5000 weight=3 max_fails=3 fail_timeout=30s;
    
    # PLACEHOLDER_SERVERS - This will be replaced by deployment script
    
    # Keepalive connections for better performance
    keepalive 32;
}

# HTTP server block
server {
    listen 80;
    listen [::]:80;
    
    server_name YOUR_DOMAIN.com www.YOUR_DOMAIN.com;
    
    # Redirect HTTP to HTTPS (if SSL is configured)
    # return 301 https://$server_name$request_uri;
    
    # Client body size limit (for file uploads)
    client_max_body_size 10M;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # WebSocket support
    location / {
        proxy_pass http://gaming_app_backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable buffering for WebSockets
        proxy_buffering off;
        
        # Health check tolerance
        proxy_next_upstream error timeout http_502 http_503 http_504;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Static files caching (if needed)
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2)$ {
        proxy_pass http://gaming_app_backend;
        expires 7d;
        add_header Cache-Control "public, immutable";
    }
}

# HTTPS server block (optional - requires SSL certificate)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name YOUR_DOMAIN.com www.YOUR_DOMAIN.com;
#     
#     # SSL certificate paths
#     ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN.com/privkey.pem;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     
#     # Same location blocks as HTTP server
#     location / {
#         proxy_pass http://gaming_app_backend;
#         # ... (same proxy settings as above)
#     }
# }
